import{_ as e,c as s,o as n,a}from"./app.9bca02c0.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"files/vue/imgs/resolve.md"}'),o={name:"files/vue/imgs/resolve.md"},t=a(`<p>error</p><div class="language-javascript"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">vue</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">runtime</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">esm</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">js:</span><span style="color:#F78C6C;">619</span><span style="color:#A6ACCD;"> [Vue warn]: The client</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">side rendered virtual DOM tree is not matching server</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">rendered content</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;"> This is likely caused by incorrect HTML markup</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> for example nesting block</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">level elements inside </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">p</span><span style="color:#89DDFF;">&gt;,</span><span style="color:#A6ACCD;"> or missing </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">tbody</span><span style="color:#89DDFF;">&gt;.</span><span style="color:#A6ACCD;"> Bailing hydration and performing full client</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">side render</span><span style="color:#89DDFF;">.</span></span>
<span class="line"></span></code></pre></div><p>resolve</p><p>link\uFF1A<a href="https://stackoverflow.com/questions/47862591/vuejs-error-the-client-side-rendered-virtual-dom-tree-is-not-matching-server-re?answertab=trending#tab-top" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/47862591/vuejs-error-the-client-side-rendered-virtual-dom-tree-is-not-matching-server-re?answertab=trending#tab-top</a></p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">1\u3001Show DevTools in Chrome (F12)</span></span>
<span class="line"><span style="color:#A6ACCD;">2\u3001Load the page that causes &quot;the client-side rendered virtual DOM tree...&quot; warning.</span></span>
<span class="line"><span style="color:#A6ACCD;">3\u3001Scroll to the warning in DevTools console.</span></span>
<span class="line"><span style="color:#A6ACCD;">4\u3001Click at the source location hyperlink of the warning (in my case it was vue.runtime.esm.js:574).</span></span>
<span class="line"><span style="color:#A6ACCD;">5\u3001Set a breakpoint there (left-clicking at line number in the source code browser).</span></span>
<span class="line"><span style="color:#A6ACCD;">6\u3001Make the same warning to appear again. I&#39;m not saying it is always possible, but in my case I simply reloaded the page. If there are many warnings, you can check the message by moving a mouse over msg variable.</span></span>
<span class="line"><span style="color:#A6ACCD;">7\u3001When you found your message and stopped on a breakpoint, look at the call stack. Click one frame down to call to &quot;patch&quot; to open its source. Hover mouse over hydrate function call 4 lines above the execution line in patch. Hyperlink to the source of hydrate would open.</span></span>
<span class="line"><span style="color:#A6ACCD;">8\u3001In the hydrate function, move about 15 lines from the start and set a breakpoint where false is returned after assertNodeMatch returned false. Set the breakpoint there and remove all other breakpoints.</span></span>
<span class="line"><span style="color:#A6ACCD;">9\u3001Make the same warning to happen again. Now, when breakpoint is hit, execution should stop in the hydrate function. Switch to DevTools console and evaluate elm and then vnode. Here elm seem to be a server-rendered DOM element while vnode is a virtual DOM node. Elm is printed as HTML so you can figure out where the error happened.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,5),l=[t];function r(p,c,i,d,y,D){return n(),s("div",null,l)}var C=e(o,[["render",r]]);export{u as __pageData,C as default};
